[{"kind":1,"language":"markdown","value":"# Entity Keyword: `PAYLOAD`\r\n> **Available in:**\r\n> - Coreflux MQTT Broker >v1.5.1  \r\n> - Linux ARM64 \r\n> - Linux x64 \r\n> - Windows x64 \r\n## 1. Overview\r\n- **Description:**  \r\n  Represents the content or data that triggers an action upon the reception of a topic event. It specifically holds the payload of the triggering topic.\r\n\r\n## 2. Signature\r\n- **Syntax:**  \r\n  ```lot\r\n  PAYLOAD\r\n  ```\r\n\r\n## 3. Compatible Keywords\r\nList and description of each KEYWORD that can be used in combination:\r\n- **`SET`**: Assigns the PAYLOAD to a variable for reuse.\r\n- **`PUBLISH TOPIC`**: Broadcasts the payload to another topic.\r\n- **`KEEP TOPIC`**: Internally stores the payload.\r\n- **`GET TOPIC`**: Retrieves additional topic data to use in conjunction with the PAYLOAD.\r\n- **`IF`**: Performs conditional actions based on the PAYLOAD content.\r\n- **`REPLACE`**: Modifies strings dynamically using the PAYLOAD.\r\n\r\n## 4. Return Value\r\n- **Description:**\r\n  Provides the exact payload content of the triggering topic.\r\n\r\n## 5. Usage Examples\r\n\r\n### Basic Example\r\nPublishes an incremented payload value when triggered:\r\n"},{"kind":2,"language":"lot","value":"\r\nDEFINE ACTION IncrementActionTriggered\r\nON TOPIC \"input/topic\" DO\r\n     PUBLISH TOPIC \"output/topic\" WITH (PAYLOAD + 1)\r\n\r\n"},{"kind":1,"language":"markdown","value":"\r\n- **Scenario Example:**\r\n  - Received payload: `10`\r\n  - Result: \"output/topic\" publishes `11`\r\n\r\n### Intermediate Example\r\nChecks a counter topic, initializes it if empty, and increments based on the PAYLOAD:\r\n\r\n\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION CountTrigger\r\nON TOPIC \"Plant/Equipments/+/di1\" DO\r\n    IF GET TOPIC \"Plant/Machines/+/Production/Counter\" EQUALS EMPTY THEN\r\n        PUBLISH TOPIC \"Plant/Machines/+/Production/Counter\" WITH 0\r\n    IF PAYLOAD == \"True\" THEN\r\n        PUBLISH TOPIC \"Plant/Machines/+/Production/Counter\" WITH (GET TOPIC \"Plant/Machines/+/Production/Counter\" + 1)\r\n"},{"kind":1,"language":"markdown","value":"\r\n- **Scenario Example:**\r\n  - Received payload: `True`\r\n  - Initial Counter: `5`\r\n  - Result: Counter topic updated to `6`\r\n\r\n### Advanced Example\r\nDynamically replaces a placeholder in a message with the PAYLOAD value:\r\n\r\n\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION TestReplace\r\nON TOPIC \"Selected/Machine\"\r\nDO\r\n    SET \"Message\" WITH REPLACE \"xx\" WITH PAYLOAD IN \"Machine xx was Selected!\"\r\n    PUBLISH TOPIC \"Message\" WITH {Message}"},{"kind":1,"language":"markdown","value":"\r\n- **Scenario Example:**\r\n  - Received payload: `12`\r\n  - Result: \"Message\" topic publishes \"Machine 12 was Selected!\"\r\n\r\n### Direct Usage with `PUBLISH` and `KEEP`\r\nDirectly integrates `REPLACE` and PAYLOAD into PUBLISH and KEEP operations:\r\n"},{"kind":2,"language":"lot","value":"\r\nDEFINE ACTION TestReplaceDirect\r\nON TOPIC \"Selected/Machine\"\r\nDO\r\n    PUBLISH TOPIC \"MessageExternally\" WITH REPLACE \"xx\" WITH PAYLOAD IN \"Machine xx was Selected!\"\r\n    KEEP TOPIC \"MessageInternally\" WITH REPLACE \"xx\" WITH PAYLOAD IN \"Machine xx was Selected!\""},{"kind":1,"language":"markdown","value":"\r\n- **Scenario Example:**\r\n  - Received payload: `07`\r\n  - Result:\r\n    - \"MessageExternally\" broadcasts \"Machine 07 was Selected!\"\r\n    - \"MessageInternally\" stores \"Machine 07 was Selected!\" internally\r\n\r\n## 6. Notes & Additional Information\r\n- **Related Entities:**\r\n\r\n  - [TIMESTAMP](../TIMESTAMP/TIMESTAMP.lotnb)\r\n  - [TOPIC](../TOPIC/TOPIC.lotnb)\r\n\r\n[Back to Entities](../Entities.lotnb)\r\n\r\n"}]