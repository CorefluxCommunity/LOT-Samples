[{"kind":1,"language":"markdown","value":"# Entity Keyword: `TIMESTAMP`\r\n\r\n> **Available in:**\r\n> - Coreflux MQTT Broker >v1.5.1  \r\n> - Linux ARM64\r\n> - Linux x64\r\n> - Windows x64\r\n\r\n## 1. Overview\r\n- **Description:**  \r\n  Provides the current date and time in various predefined or custom formats. This entity can dynamically generate timestamps for use within actions or model definitions in LOT.\r\n\r\n## 2. Signature\r\n- **Syntax:**  \r\n  ```lot\r\n  <PUBLISH | KEEP TOPIC | SET > TIMESTAMP WITH \"<format>\"\r\n  ```\r\n\r\n## 3. Supported Formats\r\n\r\n### Built-in Formats\r\n\r\n| Format    | Description                                | Example Output                     |\r\n|-----------|--------------------------------------------|------------------------------------|\r\n| `ISO`     | ISO 8601 standard format                   | `2025-03-17T14:25:30.123Z`         |\r\n| `UTC`     | UTC date and time                          | `2025-03-17 14:25:30`              |\r\n| `UNIX`    | UNIX timestamp (seconds since Unix epoch)  | `1742193930`                       |\r\n| `UNIX-MS` | UNIX timestamp (milliseconds since epoch)  | `1742193930123`                    |\r\n\r\n### Custom Format Strings\r\nYou can define a custom date-time format using special characters to specify date and time components.\r\n\r\n| Symbol | Description                  | Example |\r\n|--------|------------------------------|---------|\r\n| `yyyy` | 4-digit year                 | `2025`  |\r\n| `MM`   | 2-digit month (01-12)        | `03`    |\r\n| `dd`   | 2-digit day (01-31)          | `17`    |\r\n| `HH`   | 24-hour clock hour (00-23)   | `14`    |\r\n| `mm`   | Minute (00-59)               | `25`    |\r\n| `ss`   | Second (00-59)               | `30`    |\r\n| `fff`  | Milliseconds (000-999)       | `123`   |\r\n| `tt`   | AM/PM designator             | `PM`    |\r\n| `zzz`  | Timezone offset              | `+00:00`|\r\n| `dddd` | Full weekday name            | `Monday`|\r\n| `MMM`  | Abbreviated month name       | `Mar`   |\r\n| `MMMM` | Full month name              | `March` |\r\n\r\n**Example Custom Formats:**\r\n- `\"yyyy/MM/dd HH:mm:ss\"` → `2025/03/17 14:25:30`\r\n- `\"dd-MM-yyyy\"` → `17-03-2025`\r\n- `\"HH:mm:ss.fff\"` → `14:25:30.123`\r\n- `\"MM-dd-yyyy HH:mm:ss tt\"` → `03-17-2025 02:25:30 PM`\r\n- `\"dddd, dd MMMM yyyy\"` → `Monday, 17 March 2025`\r\n- `\"ddd, dd MMM yyyy\"` → `Mon, 17 Mar 2025`\r\n\r\n## 4. Compatible Keywords\r\n- **`SET`**: Stores the generated timestamp into a variable.\r\n- **`PUBLISH TOPIC`**: Publishes timestamp data externally.\r\n- **`KEEP TOPIC`**: Stores timestamp data internally.\r\n- **`REPLACE`**: Inserts dynamically generated timestamps into strings.\r\n\r\n## 5. Return Value\r\n- **Description:**\r\n  Returns a formatted string representing the current timestamp based on the specified format.\r\n\r\n## 6. Usage Examples\r\n\r\n### Basic Example\r\nPublishes current timestamp in ISO format every 10 seconds:\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION PublishTimestampISO\r\nON EVERY 10 SECONDS DO\r\n    PUBLISH TOPIC \"time/iso\" WITH TIMESTAMP WITH \"ISO\""},{"kind":1,"language":"markdown","value":"- **Output Example:**\r\n  - Publishes: `2025-03-17T14:25:30.123Z`\r\n\r\n### Intermediate Example\r\nStores a UNIX timestamp internally for device event logging:\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION LogEvent\r\nON TOPIC \"device/event\" DO\r\n    KEEP TOPIC \"event/log\" WITH TIMESTAMP WITH \"UNIX\""},{"kind":1,"language":"markdown","value":"- **Output Example:**\r\n  - Stores internally: `1742193930`\r\n\r\n### Advanced Example with Custom Format\r\nPublishes a detailed timestamp for precise monitoring:\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION DetailedMonitoringTimestamp\r\nON EVERY 1 MINUTE DO\r\n    PUBLISH TOPIC \"monitoring/timestamp\" WITH TIMESTAMP WITH \"yyyy-MM-dd HH:mm:ss.fff\""},{"kind":1,"language":"markdown","value":"\r\n- **Output Example:**\r\n  - Publishes: `2025-03-17 14:25:30.123`\r\n\r\n### Usage with `REPLACE`\r\nInserting dynamic timestamps into message strings:\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION DynamicTimestampMessage\r\nON TOPIC \"alerts/generate\" DO\r\n    SET \"AlertMessage\" WITH REPLACE \"<timestamp>\" WITH TIMESTAMP WITH \"UTC\" IN \"Alert triggered at <timestamp>\"\r\n    PUBLISH TOPIC \"alerts/messages\" WITH {AlertMessage}"},{"kind":1,"language":"markdown","value":"\r\n- **Output Example:**\r\n  - Publishes: `Alert triggered at 2025-03-17 14:25:30`\r\n\r\n### Weekday and Month Name Example\r\nPublishes a readable date including weekday and month names:\r\n\r\n"},{"kind":2,"language":"lot","value":"DEFINE ACTION ReadableDate\r\nON EVERY 1 DAY DO\r\n    PUBLISH TOPIC \"daily/date\" WITH TIMESTAMP WITH \"dddd, dd MMMM yyyy\""},{"kind":1,"language":"markdown","value":"\r\n- **Output Example:**\r\n  - Publishes: `Monday, 17 March 2025`\r\n\r\n## 7. Notes & Additional Information\r\n- **Timezone**: All built-in formats use Coordinated Universal Time (UTC).\r\n- **Custom Formats**: Ensure your custom string follows correct formatting symbols as indicated above.\r\n- Incorrect custom formats will result in an empty string output.\r\n\r\n## 8. Related Entities\r\n- [PAYLOAD](../PAYLOAD/PAYLOAD.lotnb)\r\n- [TOPIC](../TOPIC/TOPIC.lotnb)\r\n\r\n[Back to Entities](../Entities.lotnb)"}]